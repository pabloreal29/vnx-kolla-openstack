heat_template_version: 2017-02-24

description: Creaci√≥n del escenario del Trabajo Final en OpenStack

resources:
  
## REDES Y SUBREDES ---------------------------------------

  net1:
    type: OS::Neutron::Net
    properties:
      name: Net1
    
  net2:
    type: OS::Neutron::Net
    properties:
      name: Net2
  
  subnet1:
    type: OS::Neutron::Subnet
    properties:
      name: subnet1
      network_id: {get_resource: net1}
      cidr: 10.1.1.0/24
      dns_nameservers: [8.8.8.8]
      gateway_ip: 10.1.1.1
      allocation_pools:
        - start: 10.1.1.2
          end: 10.1.1.100
  
  subnet2:
    type: OS::Neutron::Subnet
    properties:
      name: subnet2
      network_id: {get_resource: net2}
      cidr: 10.1.2.0/24
      allocation_pools:
        - start: 10.1.2.2
          end: 10.1.2.100

  ## FIREWALL -------------------------------------------------------
  
  firewall_router:
    type: OS::Neutron::Router
    properties:
      name: firewall_router
      external_gateway_info:
        network: ExtNet
  
  fw_router_inface:
    type: OS::Neutron::RouterInterface
    properties:
      subnet: {get_resource: subnet1}
      router: {get_resource: firewall_router}
      

  ## BALANCEADOR ----------------------------------------------------
  
  # load_balancer:
  #   type: OS::Octavia::LoadBalancer
  #   properties:
  #     name: load_balancer
  #     vip_subnet: {get_resource: subnet1}
  #     vip_address: 10.1.1.23

  # lb_listener:
  #   type: OS::Octavia::Listener
  #   properties:
  #     name: lb_listener
  #     protocol: HTTP                  
  #     protocol_port: 80               
  #     loadbalancer: {get_resource: load_balancer}

  # lb_pool:
  #   type: OS::Octavia::Pool
  #   properties:
  #     name: lb_pool
  #     lb_algorithm: ROUND_ROBIN
  #     protocol: HTTP
  #     listener: {get_resource: lb_listener}
  #     loadbalancer: {get_resource: load_balancer}
  
  # lb_memberS1:
  #   type: OS::Octavia::PoolMember
  #   properties:
  #     pool: {get_resource: lb_pool}
  #     protocol_port: 80
  #     address: {get_attr: [port1_net1, fixed_ips, 0, ip_address]}

  # lb_memberS2:
  #   type: OS::Octavia::PoolMember
  #   properties:
  #     pool: {get_resource: lb_pool}
  #     protocol_port: 80
  #     address: {get_attr: [port2_net1, fixed_ips, 0, ip_address]}

  # lb_memberS3:
  #   type: OS::Octavia::PoolMember
  #   properties:
  #     pool: {get_resource: lb_pool}
  #     protocol_port: 80
  #     address: {get_attr: [port3_net1, fixed_ips, 0, ip_address]}



  ## GRUPO DE SEGURIDAD -----------------------------------------------------------------

  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: open
      description: Nuestro grupo de seguridad
      rules:
        - {remote_ip_prefix: 0.0.0.0/0, direction: ingress}
        - {remote_ip_prefix: 0.0.0.0/0, direction: egress}


  ## PUERTOS NET1 -----------------------------------------------------------------
  
  port1_net1:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: net1}
      security_groups: 
        - {get_resource: security_group}
      fixed_ips: 
        - subnet: {get_resource: subnet1}

  port2_net1:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: net1}
      security_groups: 
        - {get_resource: security_group}
      fixed_ips: 
        - subnet: {get_resource: subnet1}
  
  port3_net1:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: net1}
      security_groups: 
        - {get_resource: security_group}
      fixed_ips: 
        - subnet: {get_resource: subnet1}


  ## PUERTOS NET2 -----------------------------------------------------------------
  
  port1_net2:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: net2}
      security_groups: 
        - {get_resource: security_group}
      fixed_ips: 
        - subnet: {get_resource: subnet2}

  port2_net2:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: net2}
      security_groups: 
        - {get_resource: security_group}
      fixed_ips: 
        - subnet: {get_resource: subnet2}
  
  port3_net2:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: net2}
      security_groups: 
        - {get_resource: security_group}
      fixed_ips: 
        - subnet: {get_resource: subnet2}
  
  portBBDD_net2:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: net2}
      security_groups: 
        - {get_resource: security_group}
      fixed_ips: 
        - ip_address: 10.1.2.83


  ## PUERTO ACCESO ADMIN ----------------------------------------

  port_admin1:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: net1}
      security_groups: 
        - {get_resource: security_group}
      fixed_ips:
      - subnet: {get_resource: subnet1} 
        ip_address: 10.1.1.57
  
  port_admin2:
    type: OS::Neutron::Port
    properties:
      network: {get_resource: net2}
      security_groups: 
        - {get_resource: security_group}
      fixed_ips: 
        - subnet: {get_resource: subnet2}
    

  ## IPs FLOTANTES ------------------------------------------------

  # floating_ipLB:
  #   type: OS::Neutron::FloatingIP
  #   properties:
  #     floating_network: ExtNet
  #     port_id: {get_attr: [load_balancer, vip_port_id]}

  floating_ipAdmin:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: ExtNet
      port_id: {get_resource: port_admin1}


  ## SERVIDORES ------------------------------------------------

  s1:
    type: OS::Nova::Server
    properties:
      name: s1
      image: focal-servers-vnx
      flavor: m1.large
      networks:
      - network: {get_resource: net1}
        port: {get_resource: port1_net1}
      - network: {get_resource: net2}
        port: {get_resource: port1_net2}
      key_name: s1
      user_data_format: RAW
      user_data: |
        #!/bin/bash
        systemctl start apache2
        echo "<h1>Bienvenidos al Servidor 1</h1>" > /var/www/html/index.html
  
  s2: 
    type: OS::Nova::Server
    properties:
      name: s2
      image: focal-servers-vnx
      flavor: m1.large
      networks:
      - network: {get_resource: net1}
        port: {get_resource: port2_net1}
      - network: {get_resource: net2}
        port: {get_resource: port2_net2}
      key_name: s2
      user_data_format: RAW
      user_data: |
        #!/bin/bash
        systemctl start apache2
        echo "<h1>Bienvenidos al Servidor 2</h1>" > /var/www/html/index.html

  s3: 
    type: OS::Nova::Server
    properties:
      name: s3
      image: focal-servers-vnx
      flavor: m1.large
      networks:
      - network: {get_resource: net1}
        port: {get_resource: port3_net1}
      - network: {get_resource: net2}
        port: {get_resource: port3_net2}
      key_name: s3
      user_data_format: RAW
      user_data: |
        #!/bin/bash
        systemctl start apache2
        echo "<h1>Bienvenidos al Servidor 3</h1>" > /var/www/html/index.html


  admin:
    type: OS::Nova::Server
    properties:
      name: admin
      image: focal-admin-vnx
      flavor: m1.smaller
      networks:
      - network: {get_resource: net1}
        port: {get_resource: port_admin1}
        floating_ip: {get_resource: floating_ipAdmin}
      - network: {get_resource: net2}
        port: {get_resource: port_admin2}
      key_name: admin

    
  ## BASE DE DATOS ----------------------------------------

  bbdd:
    type: OS::Nova::Server
    properties:
      name: bbdd
      image: focal-bbdd-vnx
      flavor: m1.large
      networks:
      - network: {get_resource: net2}
        port: {get_resource: portBBDD_net2}
      key_name: bbdd
      user_data_format: RAW
      user_data: |
        #!/bin/bash
        systemctl start mongod

        