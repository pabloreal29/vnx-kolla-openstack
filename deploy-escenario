#!/bin/bash

source conf/admin-openrc.sh

if [ "$1" == "create" ]; then
    ssh root@tf-node << 'EOF'
    cd shared/
    terraform init
    terraform plan 
    terraform apply -auto-approve
EOF

elif [ "$1" == "destroy" ]; then
    ssh root@tf-node << 'EOF'
    cd shared/ 
    terraform destroy -auto-approve
EOF
    ssh root@controller << 'EOF'
    systemctl restart kolla-ceilometer*
EOF

elif [ "$1" == "enable" ] && [ "$2" == "ram" ]; then
    python3 deploy/create-ram-tables.py

elif [ "$1" == "enable" ] && [ "$2" == "cpu" ]; then
    python3 deploy/create-cpu-tables.py

elif [ "$1" == "monitor" ] && [ "$2" == "ram" ]; then
    python3 deploy/monitor-ram.py

elif [ "$1" == "monitor" ] && [ "$2" == "cpu" ]; then
    python3 deploy/monitor-cpu.py

elif [ "$1" == "drop" ]; then
    python3 deploy/drop-tables.py

else 
    echo "Se ha introducido un parámetro no válido. Solamente se permiten las siguientes opciones:"
    echo "- Parámetro create: Crear el escenario completo."
    echo "- Parámetro enable ram: Activar la funcionalidad de autoescalado de servidores utilizando la métrica del uso de RAM."
    echo "- Parámetro enable cpu: Activar la funcionalidad de autoescalado de servidores utilizando la métrica del uso de CPU."
    echo "- Parámetro monitor ram: Monitorizar de forma automática el uso de RAM de las instancias."
    echo "- Parámetro monitor cpu: Monitorizar de forma automática el uso de CPU de las instancias."
    echo "- Parámetro drop: Borrar las tablas de métricas almacenadas."
    echo "- Parámetro destroy: Destruir todos los elementos del escenario."
fi